//this is a thing!

//Coffee.hdl

/* 
//when we say temp, we mean temperature

//INPUTS
start is true when start is being pressed

temp true when temp >= 195 F

empty true when no water

carafe detects whether or not carafe is in position

//---States-------------------------------------------------------

//STANDBY- idle- not doing anything 00? 
inputs: 
start= false?, temp= false? , empty = false?, carafe = false?

outputs: 
heat= false?, percolate= false?, add_water_wlight =false ?, no_carafe_wlight=false?

//


//----------------------------------------------------------------

//HEATING WATER -heating up, fixin to brew. 
inputs: 
start= ?, temp= ? , empty = ?, carafe = ?

outputs:
heat= TRUE, percolate= false?, add_water_wlight = false?, no_carafe_wlight=false?

//----------------------------------------------------------------

//BREWING - hot water is going into brew chamber. 
inputs: 
start= ?, temp= ? , empty = ?, carafe = ?

outputs: 
heat= TRUE, percolate= TRUE, add_water_wlight = false?, no_carafe_wlight=false?

//----------------------------------------------------------------

//SNEAK A CUP - carafe is gone. 
inputs: 
start= ?, temp= ? , empty = ?, carafe = ?

outputs: 
heat= TRUE, percolate= false?, add_water_wlight =false ?, no_carafe_wlight=false?

//----------------------------------------------------------------

//ADD WATER - warning light flashing saying needs water
inputs: 
start= ?, temp= ? , empty = ?, carafe = ?

outputs: 
heat= false?, percolate= false?, add_water_wlight =TRUE, no_carafe_wlight=false?

//----------------------------------------------------------------

//NOT SMART - warning light says carafe is gone
inputs: 
start= ?, temp= ? , empty = ?, carafe = ?

outputs: 
heat= false?, percolate= false?, add_water_wlight= false?, no_carafe_wlight=TRUE

//----------------------------------------------------------------
*/

//real code here yo


CHIP Coffee {
	IN start, temp, empty, carafe;
	OUT heat, percolate, addWater, noCarafe;
	
	PARTS:

	//code here:
	//not sure if we need to make s0 and next s0 pins or chips, I just don't know. We need dffs, which 
	//take an in and an out. 

	Not(in=start, out=notStart);
	Not(in=temp, out=notTemp);
	Not(in=empty, out=notEmpty);
	Not(in=carafe, out=notCarafe);
	Not(in=S0, out=notS0);
	Not(in=S1, out=notS1);
	Not(in=S2, out=notS2);


	DFF(in=nexts0, out=S0); 	
	
	DFF(in=nexts1, out=S1);

	DFF(in=nexts1, out=S2);

//------nextS0 logic----------------------
	//add water
	And8Way(a=notS2, b=notS1, c=notS0, d=start, e=empty, f=true, g=true, h=true, out=s0internal1); 	

	//heating water
	And8Way(a=notS2, b=notS1, c=notS0, d=start, e=carafe, f=notEmpty, g=true, h=true, out=s0internal2); 	
	And4Way(a=notS2, b=S1, c=S0, d=notTemp, out=s0internal3); 	

	//not smart
	And8Way(a=notS2, b=notS1, c=notS0, d=start, e=notCarafe, f=notEmpty, g=true, h=true, out=s0internal4); 	

	Or4Way(a=s0internal1, b=s0internal2, c=s0internal3, d=s0internal4, out=nextS0);

//----------------------------------------

//-----nextS1 logic-----------------------
	//brewing	
	And8Way(a=notS2, b=s1,c=s0,d=temp,e=true,f=true,g=true,h=true,out=s1internal1);
	And8Way(a=notS2, b=s1,c=notS0,d=carafe,e=notEmpty,f=true,g=true,h=true,out=s1internal2);

	//heating water
	And8Way(a=notS2, b=s1, c=s0, d=notTemp, e=true, f=true, g=true, h=true, out=s1internal3);
	And8Way(a=notS2, b=notS1, c=notS0, d=start, e=carafe, f=notEmpty, g=true, h=true, out=s1internal4);

	//sneak a cup
	And8Way(a=notS2, b=s1,c=notS0,d=carafe,e=notEmpty,f=true,g=true,h=true,out=s1internal5);
	And8Way(a=s2, b=s1,c=notS0, d=notCarafe,e=true,f=true,g=true,h=true,out=s1internal6);
	
	Or8Way(a=s1internal1, b=s1internal2,c=s1internal3,d=s1internal4, e=s1internal5, f=s1internal6, g=false, h=false, out=nexts1);

//----------------------------------------

//----nextS2------------------------------

	//sneak a cup
	And8Way(a=notS2, b=s1, c=notS0, d=carafe, e=notEmpty, f=true, g=true, h=true, out=s2internal1);
	And8Way(a=s2, b=s1, c=notS0, d=notCarafe, e=true, f=true, g=true, h=true, out=s2internal2);

	//not smart
	And8Way(a=notS0, b=notS1, c=notS2, d=start, e=notCarafe, f=notEmpty, g=true, h=true, out=s2internal3);
	
	Or4Way(a=s2internal1, b=s2internal2,c=s2internal3,d=false, out=nexts2);


//----------------------------------------

}

